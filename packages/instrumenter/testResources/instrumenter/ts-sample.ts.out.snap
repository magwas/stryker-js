// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`instrumenter integration should be able to instrument a simple ts file 1`] = `
"function stryNS_9fa48() {
  var g = new Function(\\"return this\\")();
  var ns = g.__stryker__ || (g.__stryker__ = {});
  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {
    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;
  }
  function retrieveNS() {
    return ns;
  }
  stryNS_9fa48 = retrieveNS;
  return retrieveNS();
}
stryNS_9fa48();
function stryCov_9fa48() {
  var ns = stryNS_9fa48();
  var cov = ns.mutantCoverage || (ns.mutantCoverage = {
    static: {},
    perTest: {}
  });
  function cover() {
    var c = cov.static;
    if (ns.currentTestId) {
      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};
    }
    var a = arguments;
    for (var i = 0; i < a.length; i++) {
      c[a[i]] = (c[a[i]] || 0) + 1;
    }
  }
  stryCov_9fa48 = cover;
  cover.apply(null, arguments);
}
function stryMutAct_9fa48(id) {
  var ns = stryNS_9fa48();
  function isActive(id) {
    if (ns.activeMutant === id) {
      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {
        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');
      }
      return true;
    }
    return false;
  }
  stryMutAct_9fa48 = isActive;
  return isActive(id);
}
if (stryMutAct_9fa48(\\"0\\")) {
  ;
} else {
  stryCov_9fa48(\\"0\\");
  const bar: number = stryMutAct_9fa48(\\"1\\") ? 40 - 2 : (stryCov_9fa48(\\"1\\"), 40 + 2);
}
class Person {
  #name = stryMutAct_9fa48(\\"2\\") ? \\"\\" : (stryCov_9fa48(\\"2\\"), 'unknown');
  get name(): string {
    if (stryMutAct_9fa48(\\"3\\")) {
      {}
    } else {
      stryCov_9fa48(\\"3\\");
      if (stryMutAct_9fa48(\\"4\\")) {
        ;
      } else {
        stryCov_9fa48(\\"4\\");
        return this.#name;
      }
    }
  }
  set name(value: string) {
    if (stryMutAct_9fa48(\\"5\\")) {
      {}
    } else {
      stryCov_9fa48(\\"5\\");
      if (stryMutAct_9fa48(\\"6\\")) {
        ;
      } else {
        stryCov_9fa48(\\"6\\");
        if (stryMutAct_9fa48(\\"10\\") ? value.length >= 2 : stryMutAct_9fa48(\\"9\\") ? value.length <= 2 : stryMutAct_9fa48(\\"8\\") ? false : stryMutAct_9fa48(\\"7\\") ? true : (stryCov_9fa48(\\"7\\", \\"8\\", \\"9\\", \\"10\\"), value.length < 2)) {
          if (stryMutAct_9fa48(\\"11\\")) {
            {}
          } else {
            stryCov_9fa48(\\"11\\");
            if (stryMutAct_9fa48(\\"12\\")) {
              ;
            } else {
              stryCov_9fa48(\\"12\\");
              throw new Error(stryMutAct_9fa48(\\"13\\") ? \\"\\" : (stryCov_9fa48(\\"13\\"), 'Name should be at least 2 characters long'));
            }
          }
        }
      }
      if (stryMutAct_9fa48(\\"14\\")) {
        ;
      } else {
        stryCov_9fa48(\\"14\\");
        this.#name = value;
      }
    }
  }
}"
`;
