// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`instrumenter integration should be able to instrument a vue sample 1`] = `
"<template>
  <div class=\\"hello\\">
    <h1>{{ msg }}</h1>
    <h2>Essential Links</h2>
    <ul>
      <li>
        <a href=\\"https://vuejs.org\\" target=\\"_blank\\"> Core Docs </a>
      </li>
      <li>
        <a href=\\"https://forum.vuejs.org\\" target=\\"_blank\\"> Forum </a>
      </li>
      <li>
        <a href=\\"https://chat.vuejs.org\\" target=\\"_blank\\"> Community Chat </a>
      </li>
      <li>
        <a href=\\"https://twitter.com/vuejs\\" target=\\"_blank\\"> Twitter </a>
      </li>
      <br />
      <li>
        <a href=\\"http://vuejs-templates.github.io/webpack/\\" target=\\"_blank\\"> Docs for This Template </a>
      </li>
    </ul>
    <h2>Ecosystem</h2>
    <ul>
      <li>
        <a href=\\"http://router.vuejs.org/\\" target=\\"_blank\\"> vue-router </a>
      </li>
      <li>
        <a href=\\"http://vuex.vuejs.org/\\" target=\\"_blank\\"> vuex </a>
      </li>
      <li>
        <a href=\\"http://vue-loader.vuejs.org/\\" target=\\"_blank\\"> vue-loader </a>
      </li>
      <li>
        <a href=\\"https://github.com/vuejs/awesome-vue\\" target=\\"_blank\\"> awesome-vue </a>
      </li>
    </ul>
  </div>
</template>

<script>
function stryNS_9fa48() {
  var g = new Function(\\"return this\\")();
  var ns = g.__stryker__ || (g.__stryker__ = {});
  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {
    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;
  }
  function retrieveNS() {
    return ns;
  }
  stryNS_9fa48 = retrieveNS;
  return retrieveNS();
}
stryNS_9fa48();
function stryCov_9fa48() {
  var ns = stryNS_9fa48();
  var cov = ns.mutantCoverage || (ns.mutantCoverage = {
    static: {},
    perTest: {}
  });
  function cover() {
    var c = cov.static;
    if (ns.currentTestId) {
      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};
    }
    var a = arguments;
    for (var i = 0; i < a.length; i++) {
      c[a[i]] = (c[a[i]] || 0) + 1;
    }
  }
  stryCov_9fa48 = cover;
  cover.apply(null, arguments);
}
function stryMutAct_9fa48(id) {
  var ns = stryNS_9fa48();
  function isActive(id) {
    if (ns.activeMutant === id) {
      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {
        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');
      }
      return true;
    }
    return false;
  }
  stryMutAct_9fa48 = isActive;
  return isActive(id);
}
if (stryMutAct_9fa48(\\"0\\")) {
  ;
} else {
  stryCov_9fa48(\\"0\\");
  export default stryMutAct_9fa48(\\"1\\") ? {} : (stryCov_9fa48(\\"1\\"), {
    name: stryMutAct_9fa48(\\"2\\") ? \\"\\" : (stryCov_9fa48(\\"2\\"), 'HelloWorld'),
    data() {
      if (stryMutAct_9fa48(\\"3\\")) {
        {}
      } else {
        stryCov_9fa48(\\"3\\");
        if (stryMutAct_9fa48(\\"4\\")) {
          ;
        } else {
          stryCov_9fa48(\\"4\\");
          return stryMutAct_9fa48(\\"5\\") ? {} : (stryCov_9fa48(\\"5\\"), {
            msg: stryMutAct_9fa48(\\"6\\") ? \\"\\" : (stryCov_9fa48(\\"6\\"), 'Welcome to Your Vue.js App')
          });
        }
      }
    },
    watch: stryMutAct_9fa48(\\"7\\") ? {} : (stryCov_9fa48(\\"7\\"), {
      'category.type'(categoryType) {
        if (stryMutAct_9fa48(\\"8\\")) {
          {}
        } else {
          stryCov_9fa48(\\"8\\");
          if (stryMutAct_9fa48(\\"9\\")) {
            ;
          } else {
            stryCov_9fa48(\\"9\\");
            if (stryMutAct_9fa48(\\"12\\") ? this.isNew || this.category : stryMutAct_9fa48(\\"11\\") ? false : stryMutAct_9fa48(\\"10\\") ? true : (stryCov_9fa48(\\"10\\", \\"11\\", \\"12\\"), this.isNew && this.category)) {
              if (stryMutAct_9fa48(\\"13\\")) {
                {}
              } else {
                stryCov_9fa48(\\"13\\");
                if (stryMutAct_9fa48(\\"14\\")) {
                  ;
                } else {
                  stryCov_9fa48(\\"14\\");
                  this.category.permissions = stryMutAct_9fa48(\\"15\\") ? null : (stryCov_9fa48(\\"15\\"), getDefaultDocumentCategoryPermissions(categoryType));
                }
              }
            }
          }
        }
      }
    })
  });
}
</script>
<script>
function stryNS_9fa48() {
  var g = new Function(\\"return this\\")();
  var ns = g.__stryker__ || (g.__stryker__ = {});
  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {
    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;
  }
  function retrieveNS() {
    return ns;
  }
  stryNS_9fa48 = retrieveNS;
  return retrieveNS();
}
stryNS_9fa48();
function stryCov_9fa48() {
  var ns = stryNS_9fa48();
  var cov = ns.mutantCoverage || (ns.mutantCoverage = {
    static: {},
    perTest: {}
  });
  function cover() {
    var c = cov.static;
    if (ns.currentTestId) {
      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};
    }
    var a = arguments;
    for (var i = 0; i < a.length; i++) {
      c[a[i]] = (c[a[i]] || 0) + 1;
    }
  }
  stryCov_9fa48 = cover;
  cover.apply(null, arguments);
}
function stryMutAct_9fa48(id) {
  var ns = stryNS_9fa48();
  function isActive(id) {
    if (ns.activeMutant === id) {
      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {
        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');
      }
      return true;
    }
    return false;
  }
  stryMutAct_9fa48 = isActive;
  return isActive(id);
}
if (stryMutAct_9fa48(\\"16\\")) {
  ;
} else {
  stryCov_9fa48(\\"16\\");
  const b = stryMutAct_9fa48(\\"17\\") ? a - c : (stryCov_9fa48(\\"17\\"), a + c);
}
</script>

<!-- Add \\"scoped\\" attribute to limit CSS to this component only -->
<style scoped>
h1,
h2 {
  font-weight: normal;
}
ul {
  list-style-type: none;
  padding: 0;
}
li {
  display: inline-block;
  margin: 0 10px;
}
a {
  color: #42b983;
}
</style>
"
`;
